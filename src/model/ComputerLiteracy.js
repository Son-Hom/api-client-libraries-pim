/**
 * pim
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ComputerLiteracy model module.
 * @module model/ComputerLiteracy
 * @version 1.0.0
 */
class ComputerLiteracy {
    /**
     * Constructs a new <code>ComputerLiteracy</code>.
     * Represents a skill computer applications of employee.
     * @alias module:model/ComputerLiteracy
     * @param employeeId {String} 
     * @param softwareApplication {String} 
     */
    constructor(employeeId, softwareApplication) { 
        
        ComputerLiteracy.initialize(this, employeeId, softwareApplication);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, employeeId, softwareApplication) { 
        obj['EmployeeId'] = employeeId;
        obj['SoftwareApplication'] = softwareApplication;
    }

    /**
     * Constructs a <code>ComputerLiteracy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComputerLiteracy} obj Optional instance to populate.
     * @return {module:model/ComputerLiteracy} The populated <code>ComputerLiteracy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComputerLiteracy();

            if (data.hasOwnProperty('EmployeeId')) {
                obj['EmployeeId'] = ApiClient.convertToType(data['EmployeeId'], 'String');
            }
            if (data.hasOwnProperty('SoftwareApplication')) {
                obj['SoftwareApplication'] = ApiClient.convertToType(data['SoftwareApplication'], 'String');
            }
            if (data.hasOwnProperty('Level')) {
                obj['Level'] = ApiClient.convertToType(data['Level'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComputerLiteracy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComputerLiteracy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ComputerLiteracy.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['EmployeeId'] && !(typeof data['EmployeeId'] === 'string' || data['EmployeeId'] instanceof String)) {
            throw new Error("Expected the field `EmployeeId` to be a primitive type in the JSON string but got " + data['EmployeeId']);
        }
        // ensure the json data is a string
        if (data['SoftwareApplication'] && !(typeof data['SoftwareApplication'] === 'string' || data['SoftwareApplication'] instanceof String)) {
            throw new Error("Expected the field `SoftwareApplication` to be a primitive type in the JSON string but got " + data['SoftwareApplication']);
        }
        // ensure the json data is a string
        if (data['Level'] && !(typeof data['Level'] === 'string' || data['Level'] instanceof String)) {
            throw new Error("Expected the field `Level` to be a primitive type in the JSON string but got " + data['Level']);
        }

        return true;
    }


}

ComputerLiteracy.RequiredProperties = ["EmployeeId", "SoftwareApplication"];

/**
 * @member {String} EmployeeId
 */
ComputerLiteracy.prototype['EmployeeId'] = undefined;

/**
 * @member {String} SoftwareApplication
 */
ComputerLiteracy.prototype['SoftwareApplication'] = undefined;

/**
 * @member {String} Level
 */
ComputerLiteracy.prototype['Level'] = undefined;






export default ComputerLiteracy;

