/**
 * pim
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BioData from './model/BioData';
import BioDataCountryOfBirth from './model/BioDataCountryOfBirth';
import BioDataName from './model/BioDataName';
import BioDataNamePrimaryName from './model/BioDataNamePrimaryName';
import ComputerLiteracy from './model/ComputerLiteracy';
import Contact from './model/Contact';
import CoreCompetency from './model/CoreCompetency';
import Education from './model/Education';
import EducationSchool from './model/EducationSchool';
import ExecutiveSummary from './model/ExecutiveSummary';
import Language from './model/Language';
import Training from './model/Training';
import WorkExperience from './model/WorkExperience';
import BioDataApi from './api/BioDataApi';
import ComputerLiteracyApi from './api/ComputerLiteracyApi';
import ContactApi from './api/ContactApi';
import CoreCompetencyApi from './api/CoreCompetencyApi';
import EducationApi from './api/EducationApi';
import ExecutiveSummaryApi from './api/ExecutiveSummaryApi';
import HealthApi from './api/HealthApi';
import LanguageApi from './api/LanguageApi';
import TrainingApi from './api/TrainingApi';
import WorkExperienceApi from './api/WorkExperienceApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Pim = require('index'); // See note below*.
* var xxxSvc = new Pim.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Pim.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Pim.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Pim.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BioData model constructor.
     * @property {module:model/BioData}
     */
    BioData,

    /**
     * The BioDataCountryOfBirth model constructor.
     * @property {module:model/BioDataCountryOfBirth}
     */
    BioDataCountryOfBirth,

    /**
     * The BioDataName model constructor.
     * @property {module:model/BioDataName}
     */
    BioDataName,

    /**
     * The BioDataNamePrimaryName model constructor.
     * @property {module:model/BioDataNamePrimaryName}
     */
    BioDataNamePrimaryName,

    /**
     * The ComputerLiteracy model constructor.
     * @property {module:model/ComputerLiteracy}
     */
    ComputerLiteracy,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The CoreCompetency model constructor.
     * @property {module:model/CoreCompetency}
     */
    CoreCompetency,

    /**
     * The Education model constructor.
     * @property {module:model/Education}
     */
    Education,

    /**
     * The EducationSchool model constructor.
     * @property {module:model/EducationSchool}
     */
    EducationSchool,

    /**
     * The ExecutiveSummary model constructor.
     * @property {module:model/ExecutiveSummary}
     */
    ExecutiveSummary,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The Training model constructor.
     * @property {module:model/Training}
     */
    Training,

    /**
     * The WorkExperience model constructor.
     * @property {module:model/WorkExperience}
     */
    WorkExperience,

    /**
    * The BioDataApi service constructor.
    * @property {module:api/BioDataApi}
    */
    BioDataApi,

    /**
    * The ComputerLiteracyApi service constructor.
    * @property {module:api/ComputerLiteracyApi}
    */
    ComputerLiteracyApi,

    /**
    * The ContactApi service constructor.
    * @property {module:api/ContactApi}
    */
    ContactApi,

    /**
    * The CoreCompetencyApi service constructor.
    * @property {module:api/CoreCompetencyApi}
    */
    CoreCompetencyApi,

    /**
    * The EducationApi service constructor.
    * @property {module:api/EducationApi}
    */
    EducationApi,

    /**
    * The ExecutiveSummaryApi service constructor.
    * @property {module:api/ExecutiveSummaryApi}
    */
    ExecutiveSummaryApi,

    /**
    * The HealthApi service constructor.
    * @property {module:api/HealthApi}
    */
    HealthApi,

    /**
    * The LanguageApi service constructor.
    * @property {module:api/LanguageApi}
    */
    LanguageApi,

    /**
    * The TrainingApi service constructor.
    * @property {module:api/TrainingApi}
    */
    TrainingApi,

    /**
    * The WorkExperienceApi service constructor.
    * @property {module:api/WorkExperienceApi}
    */
    WorkExperienceApi
};
